/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;


geometry
{

	frigate_bird_bent_scaled_binary_alfa_0.stl
	{
		type		triSurfaceMesh;
		name 		wing;
	}

	refinement
	{
		type		searchableBox;
		min			(-0.02 0    -0.01);
		max			( 0.05 0.15  0.03);
	}

	refinement_tip
	{
		type		searchableCylinder;
		point1		(0.022 0.1435 0.02);
		point2      (0.122 0.1435 0.02);
		radius		0.01;
	}
/*
    refinement_centre
    {
        type		searchableCylinder;
        point1		(-0.0185  0 0);
        point2		( 0.0015 0 0);
        radius		0.0425;
    }
*/
};



castellatedMeshControls
{
    maxLocalCells 100000;

    maxGlobalCells 6000000;

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 2;

    features
    (
		{
			file	"frigate_bird_bent_scaled_binary_alfa_0.eMesh";
            level   5;
        }
    );



    refinementSurfaces
    {
        wing
        {
            level       (5 7);
        }
    }

    resolveFeatureAngle 30;


    refinementRegions
    {

		refinement
		{
			mode	inside;
			levels	((3 3));
		}

		refinement_tip
		{
			mode	inside;
			levels  ((4 4));
		}
/*
        refinement_centre
		{
			mode	inside;
			levels	((7 7));
		}
*/
    }


    locationInMesh (-0.1 0.1 0);

    allowFreeStandingZoneFaces false;
}



snapControls
{
    nSmoothPatch 5;

    tolerance 4.0; // 1.0;

    nSolveIter 300;

    nRelaxIter 5;

    nFeatureSnapIter 10;

    implicitFeatureSnap true;

    explicitFeatureSnap false;

    multiRegionFeatureSnap true;
}



addLayersControls
{
    relativeSizes true;

    layers
    {
	    wing
	    {
	        nSurfaceLayers 3;
	    }

    }

    expansionRatio 1.3;
    
	finalLayerThickness 0.5;

    minThickness 0.1;

    nGrow 0;

    featureAngle 30;

    nRelaxIter 3;

    nSmoothSurfaceNormals 1;

    nSmoothNormals 3;

    nSmoothThickness 10;

    maxFaceThicknessRatio 0.5;

    maxThicknessToMedialRatio 0.3;

    minMedianAxisAngle 90;

    nBufferCellsNoExtrude 0;

    nLayerIter 100;
}


meshQualityControls
{
    maxNonOrtho 65;

    maxBoundarySkewness 20;

    maxInternalSkewness 4;

    maxConcave 80;

    minVol -1e30;

    minTetQuality -1; // 1e-30;

    minArea -1;

    minTwist 0.01;

    minDeterminant 0.001;

    minFaceWeight 0.05;

    minVolRatio 0.01;

    minTriangleTwist -1;

    nSmoothScale 4;
    
	errorReduction 0.75;

    relaxed
    {
        maxNonOrtho 75;
    }
}



// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
